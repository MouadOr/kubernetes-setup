pipeline {
  agent any
    environment {
        PROJECT_ID = 'essential-smoke-274903'
        LOCATION = 'us-central1-c'
        CREDENTIALS_ID = 'gkeweb'
        CLUSTER_NAME = 'hirelab'
                  
    }
  stages {
    stage('Deploy Prometheus on GKE Platform') {
       steps{
           sh 'kubectl apply -f monitoring/prometheus/ '
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/prometheus/00-prometheus-rbac.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/prometheus/01-prometheus-configmap.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
 	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/prometheus/02-prometheus-rules.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/prometheus/03-prometheus-gke-storage.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/prometheus/prometheus-service.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/prometheus/prometheus-deployment.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])

       }
      }
      stage('Deploy alertmanager on GKE Platform') {
       steps{
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/alertmanager/00-alertmanager-configmap.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
           step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/alertmanager/alertmanager-configmap.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/alertmanager/alertmanager-service.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])
	       step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'monitoring/alertmanager/alertmanager-deployment.yaml', credentialsId: env.CREDENTIALS_ID, verifyDeployments: true])

       }
      }

  }
}



